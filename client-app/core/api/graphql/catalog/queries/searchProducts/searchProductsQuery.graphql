#import "../../../common/fragments/money.graphql"
#import "../../fragments/property.graphql"
#import "../../fragments/availabilityData.graphql"
#import "../../../common/fragments/rating.graphql"

query SearchProducts(
  $storeId: String!
  $userId: String!
  $currencyCode: String!
  $cultureName: String
  $filter: String
  $after: String
  $first: Int
  $sort: String
  $query: String
  $fuzzy: Boolean
  $fuzzyLevel: Int
  $productIds: [String]
  $withFacets: Boolean!
  $withImages: Boolean!
) {
  products(
    storeId: $storeId
    userId: $userId
    after: $after
    first: $first
    filter: $filter
    sort: $sort
    currencyCode: $currencyCode
    cultureName: $cultureName
    query: $query
    fuzzy: $fuzzy
    fuzzyLevel: $fuzzyLevel
    productIds: $productIds
  ) {
    totalCount
    items {
      name
      id
      code
      minQuantity
      maxQuantity
      packSize
      inWishlist
      productType
      isConfigurable
      vendor {
        id
        name
      }
      variations {
        id
        price {
          list {
            ...money
          }
          actual {
            ...money
          }
        }
      }
      hasVariations
      slug
      outline
      imgSrc
      images @include(if: $withImages) {
        url
      }
      description(type: "QuickReview") {
        content
      }
      availabilityData {
        ...availabilityData
      }
      price {
        actual {
          ...money
        }
        discountAmount {
          amount
          formattedAmount
        }
        sale {
          amount
          formattedAmount
        }
        list {
          ...money
        }
        discountPercent
      }
      minVariationPrice {
        actual {
          ...money
        }
      }
      properties {
        ...property
      }
      rating {
        ...rating
      }
    }
    term_facets @include(if: $withFacets) {
      name
      label
      terms {
        label
        term
        count
        isSelected
      }
    }
    range_facets @include(if: $withFacets) {
      name
      label
      ranges {
        label
        count
        from
        to
        includeFrom
        includeTo
        isSelected
      }
    }
  }
}

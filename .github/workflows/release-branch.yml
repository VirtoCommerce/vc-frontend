# v1.0.0.vst
name: Release - branch

on:
  workflow_dispatch:
    inputs:
      incrementVersion:
        description: 'Increment automatically minor\patch version before release created. If "none" version will not be incremented.'
        required: true
        default: 'none'
        type: choice
        options:
        - IncrementMinor
        - IncrementPatch
        - none

jobs:
  release-theme:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
    steps:

    - name: Install VirtoCommerce.GlobalTool
      run: dotnet tool install --global VirtoCommerce.GlobalTool --version 3.3.0-alpha.70

    - uses: actions/checkout@v2
      with:
            fetch-depth: 0

    - name: Setup Git Credentials
      if: ${{ !(contains(github.event.inputs.incrementVersion, 'none')) }}
      uses: VirtoCommerce/vc-github-actions/setup-git-credentials-github@master
      with:
        githubToken: ${{ secrets.REPO_TOKEN }}

    - name: Increment Version
      if: ${{ !(contains(github.event.inputs.incrementVersion, 'none')) }}
      run: |
        vc-build ${{ github.event.inputs.incrementVersion }}
        git add ${{ github.workspace }}/package.json
        git commit -m "ci: Auto ${{ github.event.inputs.incrementVersion }}"
        git push

    - name: Get Artifact Version
      uses: VirtoCommerce/vc-github-actions/get-image-version@master
      id: artifactVer

    - name: Get changelog
      id: changelog
      uses: VirtoCommerce/vc-github-actions/changelog-generator@master

    - name: Build
      id: build
      uses: VirtoCommerce/vc-github-actions/build-vue-theme@master

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ steps.artifactVer.outputs.prefix }}
        release_name: ${{ steps.artifactVer.outputs.prefix }}
        draft: false
        prerelease: false
        body: ${{ steps.changelog.outputs.changelog }}

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ steps.build.outputs.artifactPath }}
        asset_name: ${{ steps.build.outputs.artifactName }}
        asset_content_type: application/zip

name: Theme Release Hotfix
on:
  workflow_dispatch:

jobs:
  ci:
    runs-on: ubuntu-latest
    env:
      SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}
      GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
      BLOB_SAS: ${{ secrets.BLOB_TOKEN }}
      VERSION_SUFFIX: ""

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node 22
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Enable corepack
        run: |
          corepack enable

      - name: Setup sonarqube
        uses: warchant/setup-sonar-scanner@v8

      - name: Install VirtoCommerce.GlobalTool
        uses: VirtoCommerce/vc-github-actions/setup-vcbuild@master

      - name: Setup Git Credentials
        uses: VirtoCommerce/vc-github-actions/setup-git-credentials-github@master
        with:
          githubToken: ${{ secrets.REPO_TOKEN }}

      - name: Get Image Version
        uses: VirtoCommerce/vc-github-actions/get-image-version@master
        id: image
        with:
          projectType: "theme"

      - name: Set VERSION_SUFFIX variable
        run: |
          echo "VERSION_SUFFIX=${{ steps.image.outputs.suffix }}" >> $GITHUB_ENV

      - name: Set VERSION
        run: |
          echo "VERSION=${{ steps.image.outputs.prefix }}" >> $GITHUB_ENV

      - name: Update package.json Version
        run: |
          yarn version ${{ env.VERSION }}

      - name: Install dependencies
        run: |
          yarn install

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Build
        run: |
          yarn build

      - name: Unit Tests
        run: |
          yarn test:unit --run

      - name: Typing Tests
        run: |
          yarn test:typing --run

      - name: Add files to zip
        run: |
          mkdir -p ./tmp/default
          mkdir ./artifacts
          mv ./dist/* ./tmp/default
          cd ./tmp
          # zip -r ../artifacts/$(jq -r .name ../package.json)-$(jq -r .version ../package.json).zip ./default
          zip -r ../artifacts/${GITHUB_REPOSITORY#*/}-${{ steps.image.outputs.prefix }}.zip ./default

      - name: Publish to Blob
        id: blobRelease
        uses: VirtoCommerce/vc-github-actions/publish-blob-release@master
        with:
          blobSAS: ${{ secrets.BLOB_TOKEN }}

      - name: Create GH Release
        run: |
          gh release create ${{ steps.image.outputs.prefix }} \
                --target="${{ github.ref_name }}" \
                --latest=false \
                --repo="$GITHUB_REPOSITORY" \
                --title="${{ steps.image.outputs.prefix }}" \
                "./artifacts/${GITHUB_REPOSITORY#*/}-${{ steps.image.outputs.prefix }}.zip#${GITHUB_REPOSITORY#*/}-${{ steps.image.outputs.prefix }}.zip"
